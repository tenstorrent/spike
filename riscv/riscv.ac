AC_LANG_CPLUSPLUS

AX_BOOST_BASE([1.53])
AX_BOOST_ASIO
AX_BOOST_REGEX

AC_CHECK_LIB([boost_system], [main], [], [])

AC_CHECK_LIB([boost_regex], [main], [], [])

AC_ARG_WITH(isa,
	[AS_HELP_STRING([--with-isa=RV64IMAFDC],
		[Sets the default RISC-V ISA])],
  AC_DEFINE_UNQUOTED([DEFAULT_ISA], "$withval", [Default value for --isa switch]),
  AC_DEFINE_UNQUOTED([DEFAULT_ISA], "RV64IMAFDC", [Default value for --isa switch]))

AC_ARG_WITH(priv,
	[AS_HELP_STRING([--with-priv=MSU],
		[Sets the default RISC-V privilege modes supported])],
  AC_DEFINE_UNQUOTED([DEFAULT_PRIV], "$withval", [Default value for --priv switch]),
  AC_DEFINE_UNQUOTED([DEFAULT_PRIV], "MSU", [Default value for --priv switch]))

AC_ARG_WITH(varch,
	[AS_HELP_STRING([--with-varch=vlen:128,elen:64],
		[Sets the default vector config])],
  AC_DEFINE_UNQUOTED([DEFAULT_VARCH], "$withval", [Default value for --varch switch]),
  AC_DEFINE_UNQUOTED([DEFAULT_VARCH], ["vlen:128,elen:64"], [Default value for --varch switch]))

AC_ARG_WITH(target,
	[AS_HELP_STRING([--with-target=riscv64-unknown-elf],
		[Sets the default target config])],
  AC_DEFINE_UNQUOTED([TARGET_ARCH], "$withval", [Default value for --target switch]),
  AC_DEFINE_UNQUOTED([TARGET_ARCH], ["riscv64-unknown-elf"], [Default value for --target switch]))

AC_SEARCH_LIBS([dlopen], [dl dld], [
  AC_DEFINE([HAVE_DLOPEN], [], [Dynamic library loading is supported])
  AC_SUBST([HAVE_DLOPEN], [yes])
])

AC_CHECK_LIB(pthread, pthread_create, [], [AC_MSG_ERROR([libpthread is required])])

AC_ARG_ENABLE([enable_tt_table_walk_debug], AS_HELP_STRING([--enable-tt-table-walk-debug], [Print information and error messages during table walk]))
AS_IF([test "x$enable_tt_table_walk_debug" = "xyes"], [
  AC_DEFINE([TT_TABLE_WALK_DEBUG],,[Print information and error messages during table walk])
])

AC_ARG_ENABLE([enable_tt_expanded_dram_address_range], AS_HELP_STRING([--enable-tt-expanded-dram-address-range], [Starts DRAM_BASE at 0x100000 and increases memory size to a large value]))
AS_IF([test "x$enable_tt_expanded_dram_address_range" = "xyes"], [
  AC_DEFINE([TT_ENABLE_EXPANDED_DRAM_ADDRESS_RANGE],,[Starts DRAM_BASE at 0x100000 and increases memory size to a large value])
])

AC_ARG_ENABLE([enable_tt_stop_if_tohost_nonzero], AS_HELP_STRING([--enable-tt-stop-if-tohost-nonzero], [Useful if immediately after the test writes to tohost, the environment requires termination]))
AS_IF([test "x$enable_tt_stop_if_tohost_nonzero" = "xyes"], [
  AC_DEFINE([TT_STOP_IMMEDIATELY_IF_TOHOST_NONZERO],,[Useful if immediately after the test writes to tohost, the environment requires termination])
])

AC_ARG_ENABLE([dual-endian], AS_HELP_STRING([--enable-dual-endian], [Enable support for running target in either endianness]))
AS_IF([test "x$enable_dual_endian" = "xyes"], [
  AC_DEFINE([RISCV_ENABLE_DUAL_ENDIAN],,[Enable support for running target in either endianness])
])
